{"version":3,"sources":["index4.js"],"names":["refs","startbtn","document","querySelector","winnerField","progressField","tableBody","addEventListener","promises","horses","map","run","textContent","Promise","race","then","hourse","time","all","getRandomTime","min","max","Math","floor","random","resolve","setTimeout"],"mappings":";AAmGA,IAAMA,EAAO,CACTC,SAAUC,SAASC,cAAc,kBACjCC,YAAaF,SAASC,cAAc,cACpCE,cAAeH,SAASC,cAAc,gBACtCG,UAAWJ,SAASC,cAAc,sBAEtCH,EAAKC,SAASM,iBAAiB,QAAS,WAC9BC,IAAAA,EAAWC,EAAOC,IAAIC,GAE5BX,EAAKI,YAAYQ,YAAc,GAC/BZ,EAAKK,cAAcO,YAAnB,uCAEAC,QAAQC,KAAKN,GAAUO,KAAK,SAAsB,GAAnBC,IAAAA,EAAAA,EAAAA,OAAQC,EAAAA,EAAAA,KACvCjB,EAAKI,YAAYQ,YAAyBI,WAAAA,OAAAA,EAAaC,QAAAA,OAAAA,EAAvD,eAGAJ,QAAQK,IAAIV,GAAUO,KAAK,WACvBf,EAAKK,cAAcO,YAAnB,wCAIR,IAAMH,EAAS,CACb,cACA,UACA,kBACA,aACA,cAGF,SAASU,EAAcC,EAAKC,GACnBC,OAAAA,KAAKC,MAAMD,KAAKE,UAAYH,EAAMD,EAAM,GAAKA,GAGtD,SAAST,EAAIK,GACF,OAAA,IAAIH,QAAQ,SAAAY,GACTR,IAAAA,EAAOE,EAAc,IAAM,MACjCO,WAAW,WACnBD,EAAQ,CAAET,OAAAA,EAAQC,KAAAA,KACPA","file":"index4.3e374b3b.js","sourceRoot":"..\\src","sourcesContent":["// const body = document.querySelector('body')\r\n// const promise = new Promise((resolve, reject) => {\r\n//     const ok = Math.random() < 0.5\r\n//     setTimeout(() => {\r\n//         if (ok) {\r\n//             resolve('все нормально')\r\n//         }\r\n//         reject('все пропало')\r\n//     }, 3000)\r\n//         //     if (ok) {\r\n//         //     resolve('все нормально')\r\n//         // }\r\n//         // reject('все пропало')\r\n// })\r\n// promise.then(\r\n//     result => {\r\n//         console.log(result)\r\n//         return result\r\n//     }\r\n\r\n// ).then(x => {\r\n//     console.log(x)\r\n//     return x\r\n// }\r\n// ).then(x => {\r\n// return Math.random() > 0.5\r\n// }).then(x => {\r\n//     console.log(x)\r\n//     return x\r\n// }).catch(error => \r\n//     console.log(error)\r\n// ).finally(body.style.backgroundColor = 'red')\r\n\r\n\r\n\r\n\r\n\r\n\r\n// const makeDish = (dish) => {\r\n//     const promise = new Promise((resolve, reject) => {\r\n//     const passed = Math.random() < 0.5\r\n//     setTimeout(() => {\r\n//         if (passed) {\r\n//     resolve('садитесь жрать')\r\n//         } else {\r\n//     reject('горите в Аду!')\r\n// }\r\n//     }, 2000)\r\n//     })\r\n//     return promise\r\n// }\r\n// makeDish('хрень').then(fn1).catch(fn2)\r\n// function fn1 (result) {\r\n//     console.log(result)\r\n// }\r\n// function fn2(result) {\r\n//     console.log(result)\r\n// }\r\n\r\n\r\n\r\n\r\n\r\n\r\n// const makeDish = dish => {\r\n// return Promise.resolve('садитесь жрать')\r\n// }\r\n// makeDish('хрень').then(fn)\r\n\r\n// function fn (result) {\r\n//     console.log(result)\r\n// }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// function fetchPokemonById(id) {\r\n//    return fetch(`https://pokeapi.co/api/v2/pokemon/${id}`)\r\n//     .then(r => r.json())\r\n// }\r\n// fetchPokemonById(1).then(onSucces).catch(onError)\r\n// fetchPokemonById(2).then(onSucces).catch(onError)\r\n//   fetchPokemonById(3).then(onSucces).catch(onError)\r\n\r\n\r\n// function onSucces (pokemon) {\r\n//     console.log(pokemon)\r\n// }\r\n\r\n// function onError (error) {\r\n//     console.log('это косяк')\r\n// }\r\n\r\n\r\nconst refs = {\r\n    startbtn: document.querySelector('.js-start-race'),\r\n    winnerField: document.querySelector('.js-winner'),\r\n    progressField: document.querySelector('.js-progress'),\r\n    tableBody: document.querySelector('.js-results-table')\r\n}\r\nrefs.startbtn.addEventListener('click', () => {\r\n    const promises = horses.map(run)\r\n    // console.log(promises)\r\n    refs.winnerField.textContent = ''\r\n    refs.progressField.textContent = `Заезд начался, ставки не принимаются`\r\n\r\n    Promise.race(promises).then(({ hourse, time }) => {\r\n    refs.winnerField.textContent = `победил ${hourse} за ${time} мс время`\r\n    })\r\n\r\n    Promise.all(promises).then(() => {\r\n        refs.progressField.textContent = `Заезд окончен, принимаются ставки`\r\n    })\r\n})\r\n\r\nconst horses = [\r\n  'Secretariat',\r\n  'Eclipse',\r\n  'West Australian',\r\n  'Flying Fox',\r\n  'Seabiscuit',\r\n];\r\n\r\nfunction getRandomTime(min, max) {\r\n  return Math.floor(Math.random() * (max - min + 1) + min);\r\n}\r\n\r\nfunction run(hourse) {\r\n    return new Promise(resolve => {\r\n        const time = getRandomTime(2000, 3500)\r\n        setTimeout(() => {\r\nresolve({ hourse, time })\r\n        }, time)\r\n    })\r\n}\r\n// run('коняка').then(x => console.log(x))\r\n\r\n// const promises = horses.map(run)\r\n// console.log(promises)\r\n\r\n"]}