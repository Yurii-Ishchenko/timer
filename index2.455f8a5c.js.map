{"version":3,"sources":["index2.js"],"names":["refs","days","document","querySelector","hours","mins","secs","CountdownTimer","targetDate","setInterval","currentDate","Date","now","deltaDate","getTime","getTimeComponents","console","log","textContent","value","String","padStart","time","pad","Math","floor","timer","selector","getTimeFrom"],"mappings":";AAkDA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAjDA,IAAMA,EAAO,CACTC,KAAMC,SAASC,cAAc,uBAC7BC,MAAOF,SAASC,cAAc,wBAC9BE,KAAMH,SAASC,cAAc,uBAC7BG,KAAMJ,SAASC,cAAc,wBAG3BI,EAAAA,WACwB,SAAA,EAAA,GAAbC,IAAAA,EAAAA,EAAAA,WAAa,EAAA,KAAA,GACjBA,KAAAA,WAAaA,EAwC1B,OAAA,EAAA,EAAA,CAAA,CAAA,IAAA,cArCkB,MAAA,WAAA,IAAA,EAAA,KAEVC,YAAY,WACFC,IAAAA,EAAcC,KAAKC,MACnBC,EAAY,EAAKL,WAAWM,UAAYJ,EACV,EAAA,EAAKK,kBAAkBF,GAAnDZ,EAAAA,EAAAA,KAAMG,EAAAA,EAAAA,MAAOC,EAAAA,EAAAA,KAAMC,EAAAA,EAAAA,KAC3BU,QAAQC,IAAOhB,GAAAA,OAAAA,EAAQG,KAAAA,OAAAA,EAASC,KAAAA,OAAAA,EAAQC,KAAAA,OAAAA,IACxCN,EAAKC,KAAKiB,YAAcjB,EACxBD,EAAKI,MAAMc,YAAcd,EACzBJ,EAAKK,KAAKa,YAAcb,EACxBL,EAAKM,KAAKY,YAAcZ,GAEzB,OAyBX,CAAA,IAAA,MAtBQa,MAAAA,SAAAA,GACGC,OAAAA,OAAOD,GAAOE,SAAS,EAAG,OAqBrC,CAAA,IAAA,oBAlBsBC,MAAAA,SAAAA,GAKf,MAAA,CAAErB,KAJI,KAAKsB,IAAIC,KAAKC,MAAMH,EAAQ,QAI1BlB,MAHD,KAAKmB,IAAIC,KAAKC,MAAOH,EAAQ,MAAyB,OAG9CjB,KAFT,KAAKkB,IAAIC,KAAKC,MAAOH,EAAQ,KAAoB,MAElChB,KADf,KAAKiB,IAAIC,KAAKC,MAAOH,EAAQ,IAAc,WAcxD,EA1CMf,GAqCAmB,EAAQ,IAAInB,EAAe,CAC/BoB,SAAU,WACVnB,WAAY,IAAIG,KAAK,kBAGvBe,EAAME","file":"index2.455f8a5c.js","sourceRoot":"..\\src","sourcesContent":["\r\nconst refs = {\r\n    days: document.querySelector('[data-value=\"days\"]'),\r\n    hours: document.querySelector('[data-value=\"hours\"]'),\r\n    mins: document.querySelector('[data-value=\"mins\"]'),\r\n    secs: document.querySelector('[data-value=\"secs\"]')\r\n}\r\n\r\nclass CountdownTimer {\r\n    constructor({targetDate}) {\r\n        this.targetDate = targetDate\r\n    }\r\n\r\n    getTimeFrom() {\r\n        \r\n        setInterval(() => {\r\n            const currentDate = Date.now()\r\n            const deltaDate = this.targetDate.getTime() - currentDate\r\n            const { days, hours, mins, secs } = this.getTimeComponents(deltaDate)\r\n            console.log(`${days}:${hours}:${mins}:${secs}`)\r\n            refs.days.textContent = days\r\n            refs.hours.textContent = hours\r\n            refs.mins.textContent = mins\r\n            refs.secs.textContent = secs\r\n\r\n        }, 1000)\r\n    }\r\n\r\n    pad(value) {\r\n    return String(value).padStart(2, '0')\r\n    }\r\n    \r\n    getTimeComponents(time) {\r\nconst days = this.pad(Math.floor(time / (1000 * 60 * 60 * 24)));\r\nconst hours = this.pad(Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)));\r\nconst mins = this.pad(Math.floor((time % (1000 * 60 * 60)) / (1000 * 60)));\r\nconst secs = this.pad(Math.floor((time % (1000 * 60)) / 1000));\r\nreturn { days, hours, mins, secs}    \r\n}\r\n}\r\n\r\n\r\n\r\n\r\n\r\nconst timer = new CountdownTimer({\r\n  selector: '#timer-1',\r\n  targetDate: new Date('Jul 17, 2021'),\r\n});\r\n\r\ntimer.getTimeFrom()\r\n\r\n\r\n\r\n\r\n"]}